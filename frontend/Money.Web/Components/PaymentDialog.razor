@switch (CreateMode)
{
    case Mode.Add:
        <MudStack AlignItems="AlignItems.Start" Row>
            @foreach (PaymentTypes.Value type in PaymentTypes.Values)
            {
                <MudTooltip Text="@type.AddText">
                    <MudButton Color="type.Color"
                               Disabled="@(_isOpen)"
                               OnClick="() => ToggleOpen(type)"
                               Size="Size.Small"
                               Variant="Variant.Filled"
                               EndIcon="@type.Icon">
                        @type.AddText
                    </MudButton>
                </MudTooltip>
            }
            <MudTooltip Text="Быстрое добавление">
                <MudButton Color="Color.Info"
                           Disabled="@(_isOpen)"
                           OnClick="() => ToggleOpen()"
                           Size="Size.Small"
                           Variant="Variant.Filled">
                    Быстрое добавление
                </MudButton>
            </MudTooltip>
        </MudStack>

        break;

    case Mode.AddCompact:
        <MudStack
            AlignItems="AlignItems.Center" Row>
            @foreach (PaymentTypes.Value type in PaymentTypes.Values)
            {
                <MudTooltip Text="@type.AddText">
                    <MudIconButton Color="type.Color"
                                   Disabled="@(_isOpen)"
                                   Icon="@Icons.Material.Rounded.Add"
                                   OnClick="() => ToggleOpen(type)"
                                   Size="Size.Small" />
                </MudTooltip>
            }
            <MudTooltip Text="Быстрое добавление">
                <MudIconButton Color="Color.Info"
                               Disabled="@(_isOpen)"
                               Icon="@Icons.Material.Rounded.Add"
                               OnClick="() => ToggleOpen()"
                               Size="Size.Small" />
            </MudTooltip>
        </MudStack>

        break;

    case Mode.Edit:
        <MudTooltip Text="Редактировать">
            <MudIconButton Class="mx-n3"
                           Icon="@Icons.Material.TwoTone.ModeEdit"
                           OnClick="() => ToggleOpen()"
                           Size="Size.Small" />
        </MudTooltip>

        break;

    case Mode.None:
    default:
        break;
}

<MudPopover AnchorOrigin="Origin.BottomLeft"
            Class="mt-4 mx-4 pa-4"
            Open="_isOpen"
            TransformOrigin="Origin.TopLeft">
    <EditForm Model="@Input" OnValidSubmit="SubmitAsync">
        <DataAnnotationsValidator />

        <MudStack AlignItems="AlignItems.Stretch"
                  Justify="Justify.SpaceBetween"
                  Spacing="3"
                  StretchItems="StretchItems.All">
            @if (_isNumericSumVisible)
            {
                <MudNumericField Adornment="Adornment.Start"
                                 AdornmentColor="Color.Tertiary"
                                 AdornmentIcon="@Icons.Material.Filled.Calculate"
                                 @bind-Value="Input.Sum"
                                 For="@(() => Input.Sum)"
                                 Immediate
                                 Label="Сумма"
                                 OnAdornmentClick="ToggleSumFieldAsync"
                                 OnKeyDown="OnSumKeyDown" />
            }
            else
            {
                <MudTextField Adornment="Adornment.Start"
                              AdornmentColor="Color.Tertiary"
                              AdornmentIcon="@Icons.Material.Filled.Numbers"
                              AutoFocus
                              @bind-Value="Input.CalculationSum"
                              Clearable
                              Counter="0"
                              For="@(() => Input.CalculationSum)"
                              Immediate
                              Label="Сумма"
                              OnAdornmentClick="ToggleSumFieldAsync"
                              OnBlur="ToggleSumFieldAsync" />
            }

            <MudTextField @bind-Value="Input.Comment"
                          Counter="0"
                          For="@(() => Input.Comment)"
                          Label="Комментарий" />
            <MudDatePicker AdornmentColor="Color.Tertiary"
                           @bind-Date="Input.Date"
                           Color="Color.Tertiary"
                           For="@(() => Input.Date)"
                           Label="Дата" />

            <MudSelect AdornmentColor="Color.Tertiary"
                       AdornmentIcon="@Icons.Material.Rounded.Search"
                       AnchorOrigin="Origin.BottomCenter"
                       @bind-Value="Input.Category"
                       For="@(() => Input.Category)"
                       Label="Категория"
                       ToStringFunc="@(arg => arg?.Name)"
                       TransformOrigin="Origin.TopCenter">
                @foreach (Category category in Input.CategoryList ?? [])
                {
                    <MudSelectItem Value="category">
                        @category.Name
                    </MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="Input.Place"
                          Counter="0"
                          For="@(() => Input.Place)"
                          Label="Место" />
        </MudStack>

        <MudStack Class="mt-3"
                  Row
                  AlignItems="AlignItems.Center"
                  Justify="Justify.SpaceBetween">
            <MudButton Color="Color.Error" OnClick="() => ToggleOpen()">
                Закрыть
            </MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Tertiary" Variant="Variant.Filled">
                Сохранить
            </MudButton>
        </MudStack>
    </EditForm>
</MudPopover>
